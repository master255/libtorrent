name: Python bindings

on:
   push:
      branches: [ RC_1_2 RC_2_0 master ]
   pull_request:

jobs:
  test:
    name: build
    runs-on: ${{ matrix.os }}

    strategy:
      # on linux and mac, the boost libraries are fixed to a python version.
      # since we install boost from repos on those systems, we must use the
      # matching python versions
      matrix:
        include:
          - os: ubuntu-20.04
            python-version: 3.8
          - os: macos-latest
            python-version: 3.9
          - os: windows-2019
            python-version: 3.6

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    # Note:
    #  - on mac and linux images, 'python' is python2 and 'python3' is
    #    python3
    #  - on windows, neither 'python' nor 'python3' is in PATH by default
    #  - setup-python sets up PATH so 'python' and 'python3' point to the
    #    requested version on mac and linux, but on windows it only sets up
    #    'python'.
    - uses: actions/setup-python@v2
      with:
         python-version: ${{ matrix.python-version }}

    - name: install tox
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install --upgrade tox

    - name: dependencies (MacOS)
      if: runner.os == 'macOS'
      run: |
        brew install boost-build boost boost-python3

    - name: update package lists (linux)
      if: runner.os == 'Linux'
      continue-on-error: true
      run: |
        sudo apt update

    - name: dependencies (linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt install libboost-tools-dev libboost-python-dev libboost-dev libboost-system-dev

    # there appears to be a bug in boost-build where referring to a
    # dependency that's on a different drive fails, deep in boost-build
    # while concatenating paths
    - name: setup boost (windows)
      if: runner.os == 'Windows'
      shell: cmd
      run: |
        echo on
        echo using msvc ; >%HOMEDRIVE%%HOMEPATH%\user-config.jam
        mklink /J boost %BOOST_ROOT_1_72_0%
        cd boost
        b2 headers
        cd ..
        echo BOOST_ROOT=%CD%\boost>>%GITHUB_ENV%
        echo BOOST_BUILD_PATH=%CD%\boost\tools\build>>%GITHUB_ENV%
        echo %CD%\boost>>%GITHUB_PATH%

    - name: build/test with tox
      run: |
        tox -e py
